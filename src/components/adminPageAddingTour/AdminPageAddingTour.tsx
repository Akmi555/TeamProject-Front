import React, { useState, useRef } from "react";
import styles from "./AdminPageAddingTour.module.css";

const AdminPageAddingTour: React.FC = () => {
  const [formData, setFormData] = useState({
    tourName: "",
    duration: "",
    price: "",
    description: "",
     startDate: "",
     endDate: "",
    photos: [] as File[],
  });

  const [errors, setErrors] = useState({
    tourName: false,
    duration: false,
    price: false,
    description: false,
    photos: false,
  });
  const descriptionRef = useRef<HTMLTextAreaElement>(null);

  const maxLengths = {
    tourName: 100,
    duration: 5,
    price: 20,
    description: 1500,
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;

    if (value.length > maxLengths[name as keyof typeof maxLengths]) return;

    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));

    setErrors((prev) => ({
      ...prev,
      [name]: false,
    }));

    // –ê–≤—Ç–æ—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
    if (name === "description" && descriptionRef.current) {
      descriptionRef.current.style.height = "auto"; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã—Å–æ—Ç—É
      descriptionRef.current.style.height = `${descriptionRef.current.scrollHeight}px`; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –≤—ã—Å–æ—Ç—É
    }
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (!e.target.files) return;

    const files = Array.from(e.target.files);
    const totalSizeMB = files.reduce((acc, file) => acc + file.size, 0) / (1024 * 1024);

    if (files.length + formData.photos.length > 10) {
      alert("–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ 10 —Ñ–∞–π–ª–æ–≤.");
      return;
    }

    if (totalSizeMB > 20) {
      alert("–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 20 –ú–ë.");
      return;
    }

    setFormData((prev) => ({
      ...prev,
      photos: [...prev.photos, ...files],
    }));

    setErrors((prev) => ({
      ...prev,
      photos: false,
    }));
  };

  const handleRemovePhoto = (index: number) => {
    setFormData((prev) => ({
      ...prev,
      photos: prev.photos.filter((_, i) => i !== index),
    }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    const newErrors = {
      tourName: formData.tourName === "",
      duration: formData.duration === "",
      price: formData.price === "",
      description: formData.description === "",
      photos: formData.photos.length === 0,
    };

    setErrors(newErrors);

    if (Object.values(newErrors).some((error) => error)) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.");
      return;
    }

    console.log("–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:", formData);
  };

  return (
    <section className={styles.addTour}>
      <h2 className={styles.title}>–ù–û–í–´–ô –¢–£–†</h2>
      <form className={styles.form} onSubmit={handleSubmit}>
        <div className={styles.row}>
          <div className={styles.inputContainer}>
            <label className={styles.label}>
              –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞
              <span
                className={styles.required}
                data-tooltip="–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"
              >
                *
              </span>
            </label>
            <input
              type="text"
              name="tourName"
              value={formData.tourName}
              onChange={handleInputChange}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞"
              className={styles.input}
            />
            <div className={styles.charCount}>
              {formData.tourName.length}/{maxLengths.tourName}
            </div>
            {errors.tourName && (
              <span className={styles.error}>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è</span>
            )}
          </div>
        </div>





        <div className={styles.row}>
          <div className={styles.inputContainer}>
            <label className={styles.label}>
              –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—É—Ä–∞
              <span
                className={styles.required}
                data-tooltip="–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"
              >
                *
              </span>
            </label>
            <input
              type="text"
              name="duration"
              value={formData.duration}
              onChange={handleInputChange}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
              className={styles.input}
            />
            {errors.duration && (
              <span className={styles.error}>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è</span>
            )}
          </div>

          <div className={styles.inputContainer}>
            <label className={styles.label}>
              –¶–µ–Ω–∞
              <span
                className={styles.required}
                data-tooltip="–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"
              >
                *
              </span>
            </label>
            <input
              type="text"
              name="price"
              value={formData.price}
              onChange={handleInputChange}
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É"
              className={styles.input}
            />
            {errors.price && (
              <span className={styles.error}>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è</span>
            )}
          </div>
        </div>



<div className={styles.row1}>
          <div className={styles.inputContainer1}>
            <label className={styles.label}>–ù–∞—á–∞–ª–æ —Ç—É—Ä–∞</label>
              <input
                type="date"
                name="startDate"
                value={formData.startDate}
                onChange={handleInputChange}
                placeholder="–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Ç—É—Ä–∞"
                className={styles.input1}
              />

          </div>
          <div className={styles.inputContainer1}>
            <label className={styles.label}>
              –ö–æ–Ω–µ—Ü —Ç—É—Ä–∞
            </label>
            <input
                type="date"
                name="endDate"
                value={formData.endDate}
                onChange={handleInputChange}
              placeholder="–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞ —Ç—É—Ä–∞"
              className={styles.input1}
            />
          </div>
        </div>




        <div className={styles.row}>
          <div className={styles.textAreaContainer}>
            <label className={styles.label}>
              –û–ø–∏—Å–∞–Ω–∏–µ
              <span
                className={styles.required}
                data-tooltip="–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"
              >
                *
              </span>
            </label>
            <textarea
              ref={descriptionRef}
              name="description"
              value={formData.description}
              onChange={handleInputChange}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
              className={styles.textArea}
            ></textarea>
            <div className={styles.charCount}>
              {formData.description.length}/{maxLengths.description}
            </div>
            {errors.description && (
              <span className={styles.error}>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è</span>
            )}
          </div>
        </div>

        <div className={styles.row}>
          <div className={styles.attachContainer}>
            <label className={styles.attachLabel}>
              –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ
              <span
                className={styles.required}
                data-tooltip="–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"
              >
                *
              </span>
            </label>
            <input
              type="file"
              id="fileInput"
              accept="image/*"
              multiple
              style={{ display: "none" }}
              onChange={handleFileChange}
            />
            <button
              type="button"
              className={styles.attachButton}
              onClick={() => document.getElementById("fileInput")?.click()}
            >
              üìé
            </button>
          </div>
        </div>

        <ul className={styles.fileList}>
          {formData.photos.map((photo, index) => (
            <li key={index} className={styles.fileItem}>
              {photo.name}
              <button
                type="button"
                onClick={() => handleRemovePhoto(index)}
                className={styles.removePhotoButton}
              >
                –£–¥–∞–ª–∏—Ç—å
              </button>
            </li>
          ))}
        </ul>

        <button type="submit" className={styles.submitButton}>
          –î–æ–±–∞–≤–∏—Ç—å —Ç—É—Ä
        </button>
      </form>
    </section>
  );
};

export default AdminPageAddingTour;
